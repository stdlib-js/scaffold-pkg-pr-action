{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns the part of a string after a specified substring.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {integer} [fromIndex=0] - index at which to start the search\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @throws {TypeError} third argument must be an integer\n* @returns {string} substring\n*\n* @example\n* var out = substringAfter( 'Hello, world!', ', ' );\n* // returns 'world!'\n*\n* @example\n* var out = substringAfter( 'beep boop', 'beep' );\n* // returns ' boop'\n*\n* @example\n* var out = substringAfter( 'beep boop', 'boop' );\n* // returns ''\n*\n* @example\n* var out = substringAfter( 'beep boop', 'xyz' );\n* // returns ''\n*\n* @example\n* var out = substringAfter( 'beep boop', 'beep', 5 );\n* // returns ''\n*\n* @example\n* var out = substringAfter( 'beep boop beep baz', 'beep', 5 );\n* // returns ' baz'\n*/\nfunction substringAfter( str, search, fromIndex ) {\n\tvar idx;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( search ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', search ) );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', fromIndex ) );\n\t\t}\n\t\tidx = str.indexOf( search, fromIndex );\n\t} else {\n\t\tidx = str.indexOf( search );\n\t}\n\tif ( idx === -1 ) {\n\t\treturn '';\n\t}\n\treturn str.substring( idx+search.length );\n}\n\n\n// EXPORTS //\n\nmodule.exports = substringAfter;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the part of a string after a specified substring.\n*\n* @module @stdlib/string-substring-after\n*\n* @example\n* var substringAfter = require( '@stdlib/string-substring-after' );\n*\n* var str = 'beep boop';\n* var out = substringAfter( str, 'o' );\n* // returns 'op'\n*\n* out = substringAfter( str, ' ' );\n* // returns 'boop'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAS,QAAS,uBAAwB,EAwC9C,SAASC,EAAgBC,EAAKC,EAAQC,EAAY,CACjD,IAAIC,EACJ,GAAK,CAACP,EAAUI,CAAI,EACnB,MAAM,IAAI,UAAWF,EAAQ,kEAAmEE,CAAI,CAAE,EAEvG,GAAK,CAACJ,EAAUK,CAAO,EACtB,MAAM,IAAI,UAAWH,EAAQ,mEAAoEG,CAAO,CAAE,EAE3G,GAAK,UAAU,OAAS,EAAI,CAC3B,GAAK,CAACJ,EAAWK,CAAU,EAC1B,MAAM,IAAI,UAAWJ,EAAQ,oEAAqEI,CAAU,CAAE,EAE/GC,EAAMH,EAAI,QAASC,EAAQC,CAAU,CACtC,MACCC,EAAMH,EAAI,QAASC,CAAO,EAE3B,OAAKE,IAAQ,GACL,GAEDH,EAAI,UAAWG,EAAIF,EAAO,MAAO,CACzC,CAKAN,EAAO,QAAUI,ICnDjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "isInteger", "format", "substringAfter", "str", "search", "fromIndex", "idx", "main"]
}
