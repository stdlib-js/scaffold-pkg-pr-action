{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float32Array = require( '@stdlib/array-float32' );\n\n\n// MAIN //\n\n/**\n* Returns the real and imaginary components of a single-precision complex floating-point number.\n*\n* @param {Complex64} z - complex number\n* @returns {Float32Array} real and imaginary components\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var out = reimf( z );\n* // returns <Float32Array>[ 5.0, 3.0 ]\n*/\nfunction reimf( z ) {\n\tvar out = new Float32Array( 2 );\n\tout[ 0 ] = z.re;\n\tout[ 1 ] = z.im;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reimf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the real and imaginary components of a single-precision complex floating-point number.\n*\n* @module @stdlib/complex-reimf\n*\n* @example\n* var Complex64 = require( '@stdlib/complex-float32' );\n* var reimf = require( '@stdlib/complex-reimf' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var out = reimf( z );\n* // returns <Float32Array>[ 5.0, 3.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,uBAAwB,EAmBpD,SAASC,EAAOC,EAAI,CACnB,IAAIC,EAAM,IAAIH,EAAc,CAAE,EAC9B,OAAAG,EAAK,CAAE,EAAID,EAAE,GACbC,EAAK,CAAE,EAAID,EAAE,GACNC,CACR,CAKAJ,EAAO,QAAUE,ICdjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "Float32Array", "reimf", "z", "out", "main"]
}
