
// MODULES //

var resolve = require( 'path' ).resolve;
var readFileSync = require( '@stdlib/fs/read-file' ).sync;
var CLI = require( '@stdlib/cli/ctor' );
var stdin = require( '@stdlib/process/read-stdin' );
var stdinStream = require( '@stdlib/streams/node/stdin' );
var RE_EOL = require( '@stdlib/regexp/eol' ).REGEXP;
var isAscii = require( './../lib' );


// MAIN //

/**
* Main execution sequence.
*
* @private
* @returns {void}
*/
function main() {
	var flags;
	var args;
	var cli;

	// Create a command-line interface:
	cli = new CLI({
		'pkg': require( './../package.json' ),
		'options': require( './../etc/cli_opts.json' ),
		'help': readFileSync( resolve( __dirname, '..', 'docs', 'usage.txt' ), {
			'encoding': 'utf8'
		})
	});

	// Get any provided command-line options:
	flags = cli.flags();
	if ( flags.help || flags.version ) {
		return;
	}

	// Get any provided command-line arguments:
	args = cli.args();

	// Check if we are receiving data from `stdin`...
	if ( !stdinStream.isTTY ) {
		return stdin( onRead );
	}
	if ( args.length ) {
		console.log( isAscii( args[ 0 ] ) ); // eslint-disable-line no-console
	} else {
		console.log( isAscii() ); // eslint-disable-line no-console
	}

	/**
	* Callback invoked upon reading from `stdin`.
	*
	* @private
	* @param {(Error|null)} error - error object
	* @param {Buffer} data - data
	* @returns {void}
	*/
	function onRead( error, data ) {
		var lines;
		var i;
		if ( error ) {
			return cli.error( error );
		}
		lines = data.toString().split( RE_EOL );
		for ( i = 0; i < lines.length; i++ ) {
			console.log( isAscii( lines[ i ] ) ); // eslint-disable-line no-console
		}
	}
}

main();

