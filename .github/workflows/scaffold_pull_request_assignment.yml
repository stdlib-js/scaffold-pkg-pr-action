#/
# @license Apache-2.0
#
# Copyright (c) 2022 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: scaffold_package_via_pull_request_assignment

# Workflow triggers:
on:
  pull_request:
    types: [assigned]

# Workflow jobs:
jobs:
  # Define a job for checking whether the pull request originates from `stdlib-js` organization:
  check:
    # Define the type of virtual host machine on which to run the job:
    runs-on: ubuntu-latest
    
    # Define job outputs:
     outputs:
      external: ${{ steps.check-external.outputs.external }}

    # Define the sequence of job steps...
    steps:
        # Check whether the pull request originates from `stdlib-js` organization:
      - name: 'Check whether the pull request originates from `stdlib-js` organization'
        id: check-external
        run: |
          if [ ${{ github.event.pull_request.head.repo.owner }} = "stdlib-js" ]; then
            echo "::set-output name=external::false"
          else
            echo "::set-output name=external::true"
          fi

  # Define a job for scaffolding a package based off `README.md` contents:
  scaffold-external:

    # Wait for the `check` job to complete before running this job:
    needs: [check] 
    
    # Only run this job if the pull request originates from an external repository:
    if: needs.check.outputs.external == 'true' 
  
    # Define the type of virtual host machine on which to run the job:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:

      # Checkout the pull request branch of the external repository:
      - name: 'Checkout the pull request branch of the external repository'
        uses: actions/checkout@v2
        with:
          # Refers to the branch name of the pull request:
          ref: ${{ github.event.pull_request.head.ref }}
          
          # Refers to the repository name of the pull request:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      
        # Get list of changed files:
      - name: Get list of changed files
        id: changed-files
        uses: tj-actions/changed-files@v32
        with:
          separator: ' '

      # Configure git:
      - name: 'Configure git'
        run: |
          git config --local user.email "noreply@stdlib.io"
          git config --local user.name "stdlib-bot"

      # Extract file path of added `README.md` file:
      - name: 'Extract file path of added `README.md` file'
        id: extract-readme
        run: |
          pkg_path=echo ${{ steps.changed-files.outputs.added_files }} | tr ' ' '\n' | grep 'README.md' | head -n 1
          
          # Keep substring after `lib/node_modules/@stdlib/` and strip trailing `README.md`:
          pkg_path=$(echo $pkg_path | sed 's/.*lib\/node_modules\/@stdlib\///g' | sed 's/README.md//g')
          
          # Set package path as output:
          echo "::set-output name=pkg_path::$pkg_path"

      # Copy files from forked repository to new branch on `stdlib-js/stdlib` repository:
      - name: 'Copy files from forked repository to new branch on `stdlib-js/stdlib` repository'
        run: |
          scaffold_branch="scaffold/${{ steps.extract-readme.outputs.pkg_path }}"
        
          # Add remote for `stdlib-js/stdlib` repository:
          git remote add someone https://github.com/stdlib-js/stdlib.git
          
          # Fetch `stdlib-js/stdlib` repository:
          git fetch someone
          
          # Create `scaffold/<path>` branch:
          git branch $scaffold_branch ${{ github.event.pull_request.head.ref }}
          
          # Rebase `scaffold/<path>` branch to develop branch of `stdlib-js/stdlib` repository:
          git rebase develop $scaffold_branch --onto someone/develop 
          
          # Push `scaffold/<path>` branch to `stdlib-js/stdlib` repository:
          git push someone $scaffold_branch

  # Define a job for scaffolding a package based off `README.md` contents:
  scaffold-internal:
  
    # Wait for the `check` job to complete before running this job:
    needs: [check] 
    
    # Only run this job if the pull request originates from the `stdlib-js` organization:
    if: needs.check.outputs.external == 'false' 
  
    # Define the type of virtual host machine on which to run the job:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:
      # Checkout the pull request branch:
      - uses: actions/checkout@v2
        with:
          # Refers to the branch name of the pull request:
          ref: ${{ github.event.pull_request.head.ref }}
          
          # Refers to the repository name of the pull request:
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      # Run the command to scaffold a package:
      - name: 'Scaffold package'
        if: steps.check-external.outputs.external == 'false'
        id: scaffold
        uses: stdlib-js/scaffold-pkg-pr-action@main
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Configure git:
      - name: 'Configure git'
        run: |
          git config --local user.email "noreply@stdlib.io"
          git config --local user.name "stdlib-bot"
          
      # Commit changes:
      - name: 'Commit changes'
        run: |
          git add -A
          git commit -m "Scaffold ${{ steps.scaffold.outputs.path }} package files"
          
      # Push changes:
      - name: 'Push changes'
        run: |
          SLUG=${{ github.repository }}
          echo "Pushing changes to $SLUG..."
          git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$SLUG.git" HEAD:${{ steps.scaffold.outputs.path }}
          
      # Add a comment to the pull request:
      - name: 'Add comment to pull request'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Based off the `README.md` file, the [stdlib-bot](https://github.com/stdlib-bot) has generated contents for the [${{ steps.scaffold.outputs.alias }}](../tree/${{ steps.scaffold.outputs.path }}/${{ steps.scaffold.outputs.dir }}) package and pushed them to the pull request branch.
            
            ## Notes
            
            *   :warning: The stdlib-bot uses AI to generate package content. The generated content is not guaranteed to be correct, and will require manual review and editing. :warning: