
#/
# @license Apache-2.0
#
# Copyright (c) 2022 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: scaffold_package

# Workflow triggers:
on:
  workflow_dispatch:
    inputs:
      pkg:
        description: 'Package path'
        required: true
      type:
        description: 'Scaffold type'
        required: true
        default: 'native-addon'
        type: choice
        options:
          - 'native-addon'

# Workflow jobs:
jobs:
  scaffold:
    # Define the type of virtual host machine on which to run the job:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:
      # Checkout the current branch:
      - uses: actions/checkout@v3
      
      # Create package branch:
      - name: 'Create package branch'
        run: |  
          git checkout -b ${{ github.event.inputs.pkg }}

      # Run the command to scaffold a package:
      - name: Scaffold package
        id: scaffold
        uses: ./
        with:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          pkg: ${{ github.event.inputs.pkg }}
          type: ${{ github.event.inputs.type }}

      # Configure git:
      - name: 'Configure git'
        run: |
          git config --local user.email "noreply@stdlib.io"
          git config --local user.name "stdlib-bot"
          
      # Commit changes:
      - name: 'Commit changes'
        run: |
          git add -A
          git commit -m "Scaffold for package ${{ github.event.inputs.pkg }}"
          
      # Push changes:
      - name: 'Push changes'
        run: |
          SLUG=${{ github.repository }}
          echo "Pushing changes to $SLUG..."
          git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$SLUG.git" ${{ github.event.inputs.pkg }}