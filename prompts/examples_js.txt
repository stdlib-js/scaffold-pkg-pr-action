Input (jsdoc):
/**
* Capitalizes the first character in a string.
*
* @param {string} str - input string
* @throws {TypeError} must provide a string
* @returns {string} capitalized string
*
* @example
* var out = capitalize( 'last man standing' );
* // returns 'Last man standing'
*
* @example
* var out = capitalize( 'presidential election' );
* // returns 'Presidential election'
*/

Output (examples/index.js):
var capitalize = require( './../lib' );

console.log( capitalize( 'last man standing' ) );
// => 'Last man standing'

console.log( capitalize( 'presidential election' ) );
// => 'Presidential election'

Input (jsdoc):
/**
* Removes and returns the last element of a collection.
*
* @param {(Array|TypedArray|Object)} collection - collection
* @throws {TypeError} must provide either an array, typed array, or an array-like object
* @returns {Array} updated collection and the removed element
*
* @example
* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];
*
* var out = pop( arr );
* // returns [ [ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]
*
* @example
* var Float64Array = require( '@stdlib/array/float64' );
* var arr = new Float64Array( [ 1.0, 2.0 ] );
* // returns <Float64Array>[ 1.0, 2.0 ]
*
* var out = pop( arr );
* // returns [ <Float64Array>[ 1.0 ], 2.0 ]
*/

Output (examples/index.js):
var Float64Array = require( '@stdlib/array/float64' );
var pop = require( './../lib' );

var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];
var out = pop( arr );
console.log( out );
// => [ [ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]

arr = new Float64Array( [ 1.0, 2.0 ] );
out = pop( arr );
console.log( out );
// => [ <Float64Array>[ 1.0 ], 2.0 ]

Input (jsdoc):
{{input}}

Output (examples/index.js):