Input (js):
/**
* Computes the squared absolute value of a double-precision floating-point number `x`.
*
* @param {number} x - input value
* @returns {number} squared absolute value
*
* @example
* var v = abs2( -1.0 );
* // returns 1.0
*
* @example
* var v = abs2( 2.0 );
* // returns 4.0
*
* @example
* var v = abs2( 0.0 );
* // returns 0.0
*
* @example
* var v = abs2( -0.0 );
* // returns 0.0
*
* @example
* var v = abs2( NaN );
* // returns NaN
*/
function abs2( x ) {
	return x * x;
}


// EXPORTS //

module.exports = abs2;
Output (main.h):
/**
* Header file containing function declarations.
*/
#ifndef STDLIB_MATH_BASE_SPECIAL_ABS2_H
#define STDLIB_MATH_BASE_SPECIAL_ABS2_H

/*
* If C++, prevent name mangling so that the compiler emits a binary file having undecorated names, thus mirroring the behavior of a C compiler.
*/
#ifdef __cplusplus
extern "C" {
#endif

/**
* Computes the squared absolute value of a double-precision floating-point number.
*/
double stdlib_base_abs2( const double x );

#ifdef __cplusplus
}
#endif

#endif // !STDLIB_MATH_BASE_SPECIAL_ABS2_H
Input (js):
{{input}}

Output (main.h):